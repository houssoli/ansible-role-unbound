---
# tasks file for unbound
- name: install requirements
  package:
    name: "{{ unbound_requirements }}"
    state: present
  register: unbound_install_requirements
  until: unbound_install_requirements is succeeded
  retries: 3

- name: download archive
  unarchive:
    src: "https://nlnetlabs.nl/downloads/unbound/unbound-{{ unbound_version }}.tar.gz"
    dest: "{{ unbound_temporary_directory }}"
    list_files: yes
    remote_src: yes
    creates: "{{ unbound_temporary_directory }}/unbound-{{ unbound_version }}"
  register: unbound_download_archive
  until: unbound_download_archive is succeeded
  retries: 3

- name: configure
  command: ./configure --enable-systemd
  args:
    chdir: "{{ unbound_temporary_directory }}/unbound/{{ unbound_version }}"
    creates: "{{ unbound_temporary_directory }}/unbound-{{ unbound_version }}/Makefile"

- name: make
  make:
    chdir: "{{ unbound_temporary_directory }}/unbound-{{ unbound_version }}"

- name: get status of installation
  stat:
    path: /usr/local/sbin/unbound
  register: unbound_get_status_of_installation

- name: make install
  make:
    chdir: "{{ unbound_temporary_directory }}/unbound-{{ unbound_version }}"
    target: install
  when:
    - not unbound_get_status_of_installation.stat.exists

- name: make group unbound
  group:
    name: unbound
    system: yes

- name: make user unbound
  user:
    name: unbound
    group: unbound
    system: yes

- name: install service
  copy:
    src: "{{ unbound_temporary_directory }}/unbound-{{ unbound_version }}/contrib/unbound.service"
    dest: /etc/systemd/system/unbound.service
    remote_src: yes
  notify:
    - systemctl daemon-reload

- name: flush handlers
  meta: flush_handlers

- name: configure unbound
  template:
    src: unbound.conf.j2
    dest: /usr/local/etc/unbound/unbound.conf
    validate: /usr/local/sbin/unbound-checkconf %s
  notify:
    - restart unbound

- name: start and enable unbound
  block:
    - name: start and enable unbound
      service:
        name: unbound
        state: started
        enabled: yes
      register: unbound_start_and_enable_unbound
  rescue:
    - name: show registered results
      debug:
        msg: "{{ unbound_start_and_enable_unbound }}"
    - name: save journalectl -xe output
      command: journalctl -xe
      register: unbound_save_jounalct_xe_output
    - name: show registered results
      debug:
        msg: "{{ unbound_save_jounalct_xe_output }}"
